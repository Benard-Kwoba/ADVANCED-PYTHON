# _____________________________________MATPLOTLIB SUBPLOT DEMO: Plotting two figures in one grid____________________________________
# create a python module name "NI1_trend_analysis" or you can name it as you wish but ensure you call it later as you named it

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from sklearn.impute import SimpleImputer


# catch value errors with: from sklearn.impute import SimpleImputer
# change directories accordingly

def beer_keg_trend():
    df = pd.read_excel(r"C:\Users\OtienBer\Anaconda3\Lib\venv\NI1 Inventory app\warehouse excess and shorts(beer and keg).xlsx",
                       sheet_name='beer excess and shorts')
    pd.to_datetime(df["Dates"])
    # ---------------------------------------------------------beginning of subplot 1-----------------------------------
    # Impute missing values with 0
    imputer = SimpleImputer(missing_values=np.nan, strategy='constant', fill_value=0)  # np.nan to detect Nan values
    # By setting missing_values=np.nan, the SimpleImputer will recognize NaN values as missing values in the specified columns.
    df[['All Beer Products', 'Resolved variances/posted breakages']] = imputer.fit_transform(
        df[['All Beer Products', 'Resolved variances/posted breakages']])
    plt.subplot(1, 2, 1)  # creating a 1x2(nrows, ncols) grid, with first figure being in column 1
    plt.plot(df["Dates"],
        df["All Beer Products"],
        color='r',
             marker='o',
             mec='w',  # marker edge color
             mfc='y',  # marker face color
             linewidth=1.5,
             label='All beer variances')
    # adding data labels
    for i, value in enumerate(df["All Beer Products"]):
        rounded_value = round(value)  # rounding off to integers, we want to display integers
        plt.text(df["Dates"][i], value, str(rounded_value), ha='center', va='bottom')  # adding text annotations
    # added warehouse breakages/shorts
    plt.plot(df["Dates"],
             df["Resolved variances/posted breakages"],
             color='g',
             marker='o',
             mec='w',  # marker edge color
             mfc='y',  # marker face color
             linewidth=1.5,
             label='Resolved variances/posted breakages')
    # adding data labels
    for i, value in enumerate(df["Resolved variances/posted breakages"]):
        rounded_value = round(value)  # rounding off to integers, we want to display integers
        plt.text(df["Dates"][i], value, str(rounded_value), ha='center', va='bottom')  # adding text annotations

    font_title = {'family': 'serif',
            'color': 'orange',
            'size': 14,
            'weight': 'bold'}
    font_axes = {'family': 'serif',
                  'color': 'darkorange',
                  'size': 12,
                  'weight': 'bold',
                 'style': 'italic'}
    plt.title('Beer Trend', fontdict=font_title, loc='center')
    plt.xlabel('Operation Days', fontdict=font_axes)
    # to hide dates on the xaxis, use: plt.gca().axes.get_xaxis().set_visible(False)
    plt.ylabel('Variances in cases', fontdict=font_axes)
    plt.legend()  # label will appear in the legend
    plt.xticks(df["Dates"], df["Dates"].dt.strftime("%y-%m-%d"), rotation=35)  # tick locations and labels, note dt pam
    plt.grid(True, color='c', axis='both', linestyle = 'dotted', linewidth = 0.5)  # axis supported values are'x','y','both'
    # linestyle supported values: '-', '--', '-.', ':', 'None', ' ', '', 'solid', 'dashed', 'dashdot', 'dotted'
    # ---------------------------------------------------------beginning of subplot 2-----------------------------------
    plt.subplot(1, 2, 2)
    df2 = pd.read_excel(r"C:\Users\OtienBer\Anaconda3\Lib\venv\NI1 Inventory app\warehouse excess and shorts(beer and keg).xlsx",
                       sheet_name='keg excess and shorts')
    imputer = SimpleImputer(missing_values=np.nan, strategy='constant', fill_value=0)
    df2[["SENATOR 50L KEG REG", "SENATOR 50L KEG DARK", "TUSKER KEG 30L KEG"]] = imputer.fit_transform(df2[[
        "SENATOR 50L KEG REG", "SENATOR 50L KEG DARK", "TUSKER KEG 30L KEG"]])
    pd.to_datetime(df2["Dates"])
    plt.plot(df2["Dates"],
        df2["SENATOR 50L KEG REG"].values,
             color='b',
             marker='o',
             mec='k',
             mfc='y',
             linewidth=1.5,
             label='SENATOR 50L KEG REG')
    for i, value in enumerate(df2["SENATOR 50L KEG REG"]):
        plt.text(df2["Dates"][i], value, str(value), ha='center', va='bottom')
    plt.plot(df2["Dates"],
             df2["SENATOR 50L KEG DARK"].values,
             color='g',
             marker='o',
             mec='k',
             mfc='y',
             linewidth=1.5,
             label='SENATOR 50L KEG DARK')
    for i, value in enumerate(df2["SENATOR 50L KEG DARK"]):
        plt.text(df2["Dates"][i], value, str(value), ha='center', va='bottom')
    plt.plot(df2["Dates"],
             df2["TUSKER KEG 30L KEG"].values,
             color='pink',
             marker='o',
             mec='k',
             mfc='y',
             linewidth=1.5,
             label='TUSKER KEG 30L KEG')
    for i, value in enumerate(df2["TUSKER KEG 30L KEG"]):
        plt.text(df2["Dates"][i], value, str(value), ha='center', va='bottom')
    font_title = {'family': 'serif',
                  'color': 'orange',
                  'size': 14,
                  'weight': 'bold'}
    font_axes = {'family': 'serif',
                 'color': 'darkorange',
                 'size': 12,
                 'weight': 'bold',
                 'style': 'italic'}
    plt.title('Keg Trend', fontdict=font_title, loc='center')
    plt.xlabel('Operation Days', fontdict=font_axes)
    plt.ylabel('Variances in cases', fontdict=font_axes)
    plt.legend()
    plt.xticks(df2["Dates"], df2["Dates"].dt.strftime("%y-%m-%d"), rotation=35)
    plt.grid(True, color='c', axis='both', linestyle = 'dotted', linewidth = 0.5)
    # ---------------------------------------------------------end of subplot 2-----------------------------------
    # ---------------------------------------------------------end of all subplots--------------------------------
    plt.suptitle('NCD BEER AND KEG PERFORMANCE TREND', fontsize=16, fontweight='bold')  # adds a title to the entire fig
    plt.show()  # showing the plot - will show 2 plots in one figure

# running the plots
# since this is a module, run seperately(in another window/script) with 
"""
from NI1_trend_analysis import beer_keg_trend
beer_keg_trend()
"""
