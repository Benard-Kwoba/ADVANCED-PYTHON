import streamlit as st
import pandas as pd
import numpy as np
from datetime import date
from sklearn.impute import SimpleImputer
import matplotlib.pyplot as plt  # matplotlib must be installed by pip(cmd)

st.title(f':green[DATA SCIENCE WITH PYTHON]')  # note :color[text]
data_science_project = st.checkbox("Display COVID-19 Report")
if data_science_project:
    date_field = st.date_input("Reporting Date".upper(), date.today())
    st.header('COVID 2020 STATUS REPORT')
    st.subheader(f'*A visualization of the status report of Covid-19 affected countries across the world*')  # *italics
    st.markdown(f"""
[Link for original dataset](https://www.kaggle.com/datasets/sudalairajkumar/novel-corona-virus-2019-dataset)""")
    st.write(f'___________________________________________________')
    st.warning(f"""
    You are not allowed to edit any part of this project:warning:
    """)
    acceptance = st.checkbox('Accept')
    password = ''
    if acceptance:
        password = st.text_input("Enter your password", type='password', help='Your password is "Benayahu"').title()
        user_name = 'Benayahu'
        password_field_button = st.button("Go")
        if password == 'Benayahu':
            st.write(f"""
        Hi {user_name.capitalize()}, welcome to the project!
        """)
            st.write(f'___________________________________________________')
            original_df = pd.read_csv("covid_19_data.csv")
            original_df.drop(["SNo", "Last Update"], axis=1, inplace=True)
            original_df.rename(columns={"ObservationDate": "Date", "Province/State": "State",
                                        "Country/Region": "Country"}, inplace=True)
            pd.to_datetime(original_df["Date"])
            impute = SimpleImputer(strategy='constant')
            new_df = pd.DataFrame(data=impute.fit_transform(original_df), columns=original_df.columns)
            grouped_df = new_df.groupby(["Date", "Country"])[["Confirmed", "Deaths", "Recovered"]].sum().reset_index()
            df2 = grouped_df[grouped_df["Confirmed"] != 0]
            st.markdown(f'Tabulated results of covid-19 report')
            st.dataframe(df2)
            # create plotting elements with matplotlib and plot using st.pyplot()
            countries = df2["Country"].unique()
            for country in range(0, len(countries)):
                each_country_df = df2[df2["Country"] == countries[country]].reset_index()
                fig, ax = plt.subplots()  # values and axes in plt.subplots()
                ax.scatter(x=np.arange(0, len(each_country_df)),
                           y=each_country_df["Confirmed"],
                           color='yellow',
                           label='Confirmed cases')
                ax.scatter(x=np.arange(0, len(each_country_df)),
                           y=each_country_df["Deaths"],
                           color='red',
                           label='Deaths')
                ax.scatter(x=np.arange(0, len(each_country_df)),
                           y=each_country_df["Recovered"],
                           color='green',
                           label='Recovered')
                ax.legend()
                ax.set_title(countries[country])
                ax.set_xlabel('Days since first suspected case')
                ax.set_ylabel('Number of cases')
                st.pyplot(fig)
            st.markdown(f'Visualization of results of covid-19 report:')
        else:
            st.markdown(body=":red[You cannot access this project without correct password]:warning:")
    else:
        st.warning('Until you accept, you are ineligible to visit this project:exclamation:')









