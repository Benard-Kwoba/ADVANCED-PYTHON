import pandas as pd
from sklearn import tree
import warnings
warnings.filterwarnings("ignore", message="X does not have valid feature names, but DecisionTreeClassifier was fitted with feature names", category=UserWarning)

# Load the dataset
data = pd.read_csv('tennis_playing_conditions.csv')
"""
_________tennis_playing_conditions.csv________
Outlook,Temperature,Humidity,Wind,Play Tennis
Sunny,Hot,High,Weak,No
Sunny,Hot,High,Strong,No
Overcast,Hot,High,Weak,Yes
Rainy,Mild,High,Weak,Yes
Rainy,Cool,Normal,Weak,Yes
Rainy,Cool,Normal,Strong,No
Overcast,Cool,Normal,Strong,Yes
Sunny,Mild,High,Weak,No
Sunny,Cool,Normal,Weak,Yes
Rainy,Mild,Normal,Weak,Yes
Sunny,Mild,Normal,Strong,Yes
Overcast,Mild,High,Strong,Yes
Overcast,Hot,Normal,Weak,Yes
Rainy,Mild,High,Strong,No
"""

# Convert categorical variables into numerical values using map()
data['Outlook'] = data['Outlook'].map({'Sunny': 0, 'Overcast': 2, 'Rainy': 1})
data['Temperature'] = data['Temperature'].map({'Hot': 0, 'Mild': 1, 'Cool': 2})
data['Humidity'] = data['Humidity'].map({'High': 0, 'Normal': 1})
data['Wind'] = data['Wind'].map({'Weak': 1, 'Strong': 0})
data['Play Tennis'] = data['Play Tennis'].map({'No': 0, 'Yes': 1})

# Define features and target variable
features = ['Outlook', 'Temperature', 'Humidity', 'Wind']
X = data[features]
y = data['Play Tennis']

# Create the decision tree model
clf = tree.DecisionTreeClassifier()
clf = clf.fit(X, y)

# Visualize the decision tree (optional)
# import graphviz
# dot_data = tree.export_graphviz(clf, out_file=None, feature_names=features, class_names=['No', 'Yes'], filled=True, rounded=True, special_characters=True)
# graph = graphviz.Source(dot_data)
# graph.render("tennis_decision_tree")

# Predict whether tennis can be played for new conditions
outlook_choice = int(input('Enter Outlook(0,1,2): '))
temperature_choice = int(input('Temperature(0,1,2): '))
humidity_choice = int(input('Humidity(0,1): '))
wind_choice = int(input('Wind(0,1): '))

new_conditions = [[outlook_choice,temperature_choice, humidity_choice, wind_choice]]  # Example: Outlook(0,1,2), Temperature(0,1,2), Humidity(0,1), Wind(0,1)
prediction = clf.predict(new_conditions)
if prediction == 0:
    print(f"""
_______________________
Tennis cannot be played.
_______________________
""")
else:
    print(f"""
_______________________
Tennis can be played.
_______________________
""")


