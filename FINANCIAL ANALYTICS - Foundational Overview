import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

# Generate sample data
np.random.seed(42)  # for reproducibility

date_rng = pd.date_range(start='2022-01-01', end='2022-12-31', freq='M')
data = {
    'Date': date_rng,
    'Revenue': np.random.uniform(100000, 500000, size=(len(date_rng))),
    'Expenses': np.random.uniform(50000, 200000, size=(len(date_rng))),
    'TotalAssets': np.random.uniform(1000000, 5000000, size=(len(date_rng))),
    'TotalEquity': np.random.uniform(500000, 2000000, size=(len(date_rng))),
}

df = pd.DataFrame(data)
df = df.sort_values(by='Date').reset_index(drop=True)

# Calculate key financial metrics
df['NetIncome'] = df['Revenue'] - df['Expenses']
df['ProfitMargin'] = df['NetIncome'] / df['Revenue']
df['ReturnOnAssets'] = df['NetIncome'] / df['TotalAssets']
df['ReturnOnEquity'] = df['NetIncome'] / df['TotalEquity']

# Prepare trial balance
trial_balance = pd.DataFrame({
    'Account': ['Cash', 'Accounts Receivable', 'Inventory', 'Accounts Payable', 'Common Stock', 'Retained Earnings'],
    'Debit': [0, 0, 0, 0, 0, 0],
    'Credit': [0, 0, 0, 0, 0, 0]
})

# Update trial balance based on sample data
trial_balance.loc[0, 'Debit'] = df['NetIncome'].sum()  # Assuming Net Income is added to Cash
trial_balance.loc[5, 'Credit'] = df['NetIncome'].sum()  # Assuming Net Income contributes to Retained Earnings

# Prepare balance sheet
balance_sheet = pd.DataFrame({
    'Asset': ['Cash', 'Accounts Receivable', 'Inventory', 'Total Assets'],
    'Amount': [trial_balance.loc[0, 'Debit'], trial_balance.loc[1, 'Debit'], trial_balance.loc[2, 'Debit'],
               trial_balance.loc[0:2, 'Debit'].sum()]
})

liabilities_equity = pd.DataFrame({
    'Liability/Equity': ['Accounts Payable', 'Common Stock', 'Retained Earnings', 'Total Liabilities and Equity'],
    'Amount': [trial_balance.loc[3, 'Credit'], trial_balance.loc[4, 'Credit'], trial_balance.loc[5, 'Credit'],
               trial_balance.loc[3:5, 'Credit'].sum()]
})

# Display trial balance and balance sheet
print("Trial Balance:")
print(trial_balance)
print("\nBalance Sheet:")
print(balance_sheet)
print(liabilities_equity)

# Plotting financial metrics over time
plt.figure(figsize=(12, 8))

plt.subplot(2, 2, 1)
plt.plot(df['Date'], df['NetIncome'], label='Net Income')
plt.title('Net Income Over Time')
plt.xlabel('Date')
plt.ylabel('Net Income')
plt.legend()

plt.subplot(2, 2, 2)
plt.plot(df['Date'], df['ProfitMargin'], label='Profit Margin')
plt.title('Profit Margin Over Time')
plt.xlabel('Date')
plt.ylabel('Profit Margin')
plt.legend()

plt.subplot(2, 2, 3)
plt.plot(df['Date'], df['ReturnOnAssets'], label='Return on Assets')
plt.title('Return on Assets Over Time')
plt.xlabel('Date')
plt.ylabel('Return on Assets')
plt.legend()

plt.subplot(2, 2, 4)
plt.plot(df['Date'], df['ReturnOnEquity'], label='Return on Equity')
plt.title('Return on Equity Over Time')
plt.xlabel('Date')
plt.ylabel('Return on Equity')
plt.legend()

plt.tight_layout()
plt.show()
