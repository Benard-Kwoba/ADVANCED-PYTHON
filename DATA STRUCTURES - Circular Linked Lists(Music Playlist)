import os
# ____________________________________CONTINUOUS PLAYLIST WITH CIRCULAR LINKED LISTS_________________________________
"""
For advanced project consider using pydub, tkinter and other needed libraries with below considerations:
         - GUI where a user sees what song is playing
         - The user can choose to play another song still within the loop
         - The loop continues until the user chooses to close the playlist
"""

class Song:
    def __init__(self, title, artist, file_path, next_song=None):
        # Each Song object has a title, artist, file path, and a reference to the next song in the playlist
        self.title = title
        self.artist = artist
        self.file_path = file_path
        self.next_song = next_song


class Playlist:
    def __init__(self):
        # The Playlist class has a head attribute, which represents the first song in the playlist
        self.head = None

    def add_song(self, song_title, song_artist, song_file_path):
        # Method to add a new song to the playlist
        new_song = Song(song_title, song_artist, song_file_path)

        if not self.head:
            self.head = new_song
            self.head.next_song = self.head
        else:
            current_song = self.head
            while current_song.next_song != self.head:
                current_song = current_song.next_song
            current_song.next_song = new_song
            new_song.next_song = self.head

    def play_all_songs(self):
        if not self.head:
            print("The playlist is empty.")
            return

        current_song = self.head
        while True:
            print(f"Now playing {current_song.title} by {current_song.artist}")

            # Display the name of the next song
            next_song_name = current_song.next_song.title
            next_song_artist = current_song.next_song.artist
            print(f"Press Enter to play the next song: {next_song_name} by {next_song_artist}")

            os.system(f'start "" "{current_song.file_path}"')
            input()  # Wait for user input to play the next song
            current_song = current_song.next_song


if __name__ == '__main__':
    playlist = Playlist()

    # Specify the directory where your music files are stored (modify accordingly)
    music_directory = r"C:\Users\OtienBer\Desktop\NOTES\1 wd\Singles"
    music_files = [os.path.join(music_directory, file) for file in os.listdir(music_directory)
                   if file.lower().endswith((".mp3", ".m4a"))]

    # Add songs to the playlist from the selected music files
    for path in music_files:
        filename = os.path.splitext(os.path.basename(path))[0]
        if '-' in filename:
            path_artist, path_title = filename.split('-', 1)
            playlist.add_song(path_title.strip(), path_artist.strip(), path)

    playlist.play_all_songs()
