"""
_______________________NOTES ON PLOTTING 3D SURFACES: EXAMPLE 1 - USING NUMPY SINE FUNCTION________________________
First, we import the necessary libraries:

numpy as np for numerical operations.
matplotlib.pyplot as plt for plotting.
mpl_toolkits.mplot3d for 3D plotting.
We define the range of values for the x and y coordinates using np.linspace:

x = np.linspace(-5, 5, 100) creates an array of 100 equally spaced values between -5 and 5.
y = np.linspace(-5, 5, 100) creates another array of 100 equally spaced values between -5 and 5.
Next, we use np.meshgrid to generate coordinate matrices from the coordinate vectors x and y:

x_data, y_data = np.meshgrid(x, y) generates the 2D coordinate matrices x_data and y_data, which correspond to all combinations of x and y values.
We calculate the z values based on the x_data and y_data matrices:

z_data = np.sin(np.sqrt(x_data**2 + y_data**2)) computes the z values using the equation z = sin(sqrt(x^2 + y^2)).
We create a figure and an axes object using plt.figure and fig.add_subplot(111, projection='3d').

The plot_surface function is used to plot the 3D surface:

ax.plot_surface(x_data, y_data, z_data, cmap='viridis') plots the surface using the x_data, y_data, and z_data matrices. The cmap parameter sets the color map for the surface.
We customize the plot by adding labels to the axes and a title:

ax.set_xlabel('X'), ax.set_ylabel('Y'), and ax.set_zlabel('Z') set the labels for the X, Y, and Z axes, respectively.
ax.set_title('3D Surface Plot') sets the title for the plot.
Finally, we display the plot using plt.show(). The 3D surface plot will be shown in a separate window.

This code generates a 3D surface plot of a mathematical function using np.meshgrid to create the coordinate matrices and plot_surface to visualize the surface.
___________________________________________END OF NOTES ON EXAMPLE 1_____________________________________________
"""
# __________________________CODE_______________________
import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# Generate data
x = np.linspace(-5, 5, 100)
y = np.linspace(-5, 5, 100)
x_data, y_data = np.meshgrid(x, y)
z_data = np.sin(np.sqrt(x_data**2 + y_data**2))

# Create the figure and axes
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')

# Plot the surface
ax.plot_surface(x_data, y_data, z_data, cmap='viridis')

# Customize the plot
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_zlabel('Z')
ax.set_title('3D Surface Plot')

# Show the plot
plt.show()
# __________________________END OF CODE_______________________



